
atmel.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000018a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001de  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000210  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a0  00000000  00000000  00000250  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c9b  00000000  00000000  000002f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000683  00000000  00000000  00000f8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000533  00000000  00000000  0000160e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d4  00000000  00000000  00001b44  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003e7  00000000  00000000  00001c18  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004e7  00000000  00000000  00001fff  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  000024e6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	20 c0       	rjmp	.+64     	; 0x44 <__bad_interrupt>
   4:	1f c0       	rjmp	.+62     	; 0x44 <__bad_interrupt>
   6:	1e c0       	rjmp	.+60     	; 0x44 <__bad_interrupt>
   8:	1d c0       	rjmp	.+58     	; 0x44 <__bad_interrupt>
   a:	1c c0       	rjmp	.+56     	; 0x44 <__bad_interrupt>
   c:	1b c0       	rjmp	.+54     	; 0x44 <__bad_interrupt>
   e:	1a c0       	rjmp	.+52     	; 0x44 <__bad_interrupt>
  10:	19 c0       	rjmp	.+50     	; 0x44 <__bad_interrupt>
  12:	18 c0       	rjmp	.+48     	; 0x44 <__bad_interrupt>
  14:	17 c0       	rjmp	.+46     	; 0x44 <__bad_interrupt>
  16:	16 c0       	rjmp	.+44     	; 0x44 <__bad_interrupt>
  18:	15 c0       	rjmp	.+42     	; 0x44 <__bad_interrupt>
  1a:	14 c0       	rjmp	.+40     	; 0x44 <__bad_interrupt>
  1c:	13 c0       	rjmp	.+38     	; 0x44 <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d1 e0       	ldi	r29, 0x01	; 1
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61

0000002a <__do_copy_data>:
  2a:	10 e0       	ldi	r17, 0x00	; 0
  2c:	a0 e6       	ldi	r26, 0x60	; 96
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	ea e8       	ldi	r30, 0x8A	; 138
  32:	f1 e0       	ldi	r31, 0x01	; 1
  34:	02 c0       	rjmp	.+4      	; 0x3a <__do_copy_data+0x10>
  36:	05 90       	lpm	r0, Z+
  38:	0d 92       	st	X+, r0
  3a:	a0 36       	cpi	r26, 0x60	; 96
  3c:	b1 07       	cpc	r27, r17
  3e:	d9 f7       	brne	.-10     	; 0x36 <__do_copy_data+0xc>
  40:	5d d0       	rcall	.+186    	; 0xfc <main>
  42:	a1 c0       	rjmp	.+322    	; 0x186 <_exit>

00000044 <__bad_interrupt>:
  44:	dd cf       	rjmp	.-70     	; 0x0 <__vectors>

00000046 <searchZero>:
	ADCSRA |= (1 << ADSC);          // начали измерение
	while(ADCSRA & (1 << ADSC));    // ждем когда помереет
	int result = ADCH;              // отбросили шумные незначащие биты
	ADCSRA = 0b00000111;            // выключили АЦП
	return result;
}
  46:	cf 93       	push	r28
  48:	df 93       	push	r29
  4a:	c0 e0       	ldi	r28, 0x00	; 0
  4c:	d0 e0       	ldi	r29, 0x00	; 0
  4e:	ce 01       	movw	r24, r28
  50:	84 d0       	rcall	.+264    	; 0x15a <eeprom_read_byte>
  52:	88 23       	and	r24, r24
  54:	39 f0       	breq	.+14     	; 0x64 <searchZero+0x1e>
  56:	21 96       	adiw	r28, 0x01	; 1
  58:	c1 38       	cpi	r28, 0x81	; 129
  5a:	d1 05       	cpc	r29, r1
  5c:	c1 f7       	brne	.-16     	; 0x4e <searchZero+0x8>
  5e:	80 e0       	ldi	r24, 0x00	; 0
  60:	90 e0       	ldi	r25, 0x00	; 0
  62:	02 c0       	rjmp	.+4      	; 0x68 <searchZero+0x22>
  64:	8c 2f       	mov	r24, r28
  66:	9d 2f       	mov	r25, r29
  68:	df 91       	pop	r29
  6a:	cf 91       	pop	r28
  6c:	08 95       	ret

0000006e <returnCounter>:
  6e:	eb df       	rcall	.-42     	; 0x46 <searchZero>
  70:	00 97       	sbiw	r24, 0x00	; 0
  72:	29 f4       	brne	.+10     	; 0x7e <returnCounter+0x10>
  74:	80 e8       	ldi	r24, 0x80	; 128
  76:	90 e0       	ldi	r25, 0x00	; 0
  78:	70 d0       	rcall	.+224    	; 0x15a <eeprom_read_byte>
  7a:	90 e0       	ldi	r25, 0x00	; 0
  7c:	08 95       	ret
  7e:	01 97       	sbiw	r24, 0x01	; 1
  80:	6c d0       	rcall	.+216    	; 0x15a <eeprom_read_byte>
  82:	90 e0       	ldi	r25, 0x00	; 0
  84:	08 95       	ret

00000086 <checkCounter>:
  86:	cf 93       	push	r28
  88:	df 93       	push	r29
  8a:	ec 01       	movw	r28, r24
  8c:	f0 df       	rcall	.-32     	; 0x6e <returnCounter>
  8e:	8c 17       	cp	r24, r28
  90:	9d 07       	cpc	r25, r29
  92:	a1 f4       	brne	.+40     	; 0xbc <checkCounter+0x36>
  94:	d8 df       	rcall	.-80     	; 0x46 <searchZero>
  96:	ec 01       	movw	r28, r24
  98:	80 38       	cpi	r24, 0x80	; 128
  9a:	91 05       	cpc	r25, r1
  9c:	49 f4       	brne	.+18     	; 0xb0 <checkCounter+0x2a>
  9e:	60 e0       	ldi	r22, 0x00	; 0
  a0:	80 e0       	ldi	r24, 0x00	; 0
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	62 d0       	rcall	.+196    	; 0x16a <eeprom_write_byte>
  a6:	61 e0       	ldi	r22, 0x01	; 1
  a8:	80 e8       	ldi	r24, 0x80	; 128
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	5e d0       	rcall	.+188    	; 0x16a <eeprom_write_byte>
  ae:	06 c0       	rjmp	.+12     	; 0xbc <checkCounter+0x36>
  b0:	60 e0       	ldi	r22, 0x00	; 0
  b2:	01 96       	adiw	r24, 0x01	; 1
  b4:	5a d0       	rcall	.+180    	; 0x16a <eeprom_write_byte>
  b6:	61 e0       	ldi	r22, 0x01	; 1
  b8:	ce 01       	movw	r24, r28
  ba:	57 d0       	rcall	.+174    	; 0x16a <eeprom_write_byte>
  bc:	df 91       	pop	r29
  be:	cf 91       	pop	r28
  c0:	08 95       	ret

000000c2 <counterPlus>:
  c2:	cf 93       	push	r28
  c4:	df 93       	push	r29
  c6:	bf df       	rcall	.-130    	; 0x46 <searchZero>
  c8:	00 97       	sbiw	r24, 0x00	; 0
  ca:	59 f4       	brne	.+22     	; 0xe2 <counterPlus+0x20>
  cc:	80 e8       	ldi	r24, 0x80	; 128
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	44 d0       	rcall	.+136    	; 0x15a <eeprom_read_byte>
  d2:	68 2f       	mov	r22, r24
  d4:	70 e0       	ldi	r23, 0x00	; 0
  d6:	6f 5f       	subi	r22, 0xFF	; 255
  d8:	7f 4f       	sbci	r23, 0xFF	; 255
  da:	80 e8       	ldi	r24, 0x80	; 128
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	45 d0       	rcall	.+138    	; 0x16a <eeprom_write_byte>
  e0:	0a c0       	rjmp	.+20     	; 0xf6 <counterPlus+0x34>
  e2:	ec 01       	movw	r28, r24
  e4:	21 97       	sbiw	r28, 0x01	; 1
  e6:	ce 01       	movw	r24, r28
  e8:	38 d0       	rcall	.+112    	; 0x15a <eeprom_read_byte>
  ea:	68 2f       	mov	r22, r24
  ec:	70 e0       	ldi	r23, 0x00	; 0
  ee:	6f 5f       	subi	r22, 0xFF	; 255
  f0:	7f 4f       	sbci	r23, 0xFF	; 255
  f2:	ce 01       	movw	r24, r28
  f4:	3a d0       	rcall	.+116    	; 0x16a <eeprom_write_byte>
  f6:	df 91       	pop	r29
  f8:	cf 91       	pop	r28
  fa:	08 95       	ret

000000fc <main>:
  //         ||||DDB3       - PB3
  //         |||||DDB2      - PB2
  //         ||||||DDB1     - PB1
  //         |||||||DDB0    - PB0
  //         ||||||||
	DDRB = 0b00111010;
  fc:	8a e3       	ldi	r24, 0x3A	; 58
  fe:	87 bb       	out	0x17, r24	; 23
}

int main(void)
{
	SetupPins();
	sei();
 100:	78 94       	sei
	//        ||||WDE         - включение watchdog
	//        |||||WDP2       - таблица 1
	//        ||||||WDP1      - таблица 1
	//        |||||||WDP0     - таблица 1
	//        ||||||||
	WDTCR = 0b01111000;
 102:	88 e7       	ldi	r24, 0x78	; 120
 104:	81 bd       	out	0x21, r24	; 33
{
	SetupPins();
	sei();
	
	SetupWatchdog();
	ADCSRA = 0b00000111;
 106:	87 e0       	ldi	r24, 0x07	; 7
 108:	86 b9       	out	0x06, r24	; 6
	set_sleep_mode(SLEEP_MODE_PWR_DOWN);
 10a:	85 b7       	in	r24, 0x35	; 53
 10c:	87 7e       	andi	r24, 0xE7	; 231
 10e:	80 61       	ori	r24, 0x10	; 16
 110:	85 bf       	out	0x35, r24	; 53
	
	checkCounter(3);    //сбрасываем таймер при переполнении 
 112:	83 e0       	ldi	r24, 0x03	; 3
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	b7 df       	rcall	.-146    	; 0x86 <checkCounter>

	  if (returnCounter() == 3){
 118:	aa df       	rcall	.-172    	; 0x6e <returnCounter>
 11a:	03 97       	sbiw	r24, 0x03	; 3
 11c:	a9 f4       	brne	.+42     	; 0x148 <main+0x4c>
	WDTCR = 0b01111000;
	
}

inline void blink(int ms){
	PORTB = 0b00010000;
 11e:	80 e1       	ldi	r24, 0x10	; 16
 120:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 122:	2f ef       	ldi	r18, 0xFF	; 255
 124:	82 ed       	ldi	r24, 0xD2	; 210
 126:	9e e5       	ldi	r25, 0x5E	; 94
 128:	21 50       	subi	r18, 0x01	; 1
 12a:	80 40       	sbci	r24, 0x00	; 0
 12c:	90 40       	sbci	r25, 0x00	; 0
 12e:	e1 f7       	brne	.-8      	; 0x128 <main+0x2c>
 130:	00 c0       	rjmp	.+0      	; 0x132 <main+0x36>
 132:	00 00       	nop
	_delay_ms(ms);
	PORTB = 0b00000000;
 134:	18 ba       	out	0x18, r1	; 24
 136:	2f ef       	ldi	r18, 0xFF	; 255
 138:	82 ed       	ldi	r24, 0xD2	; 210
 13a:	9e e5       	ldi	r25, 0x5E	; 94
 13c:	21 50       	subi	r18, 0x01	; 1
 13e:	80 40       	sbci	r24, 0x00	; 0
 140:	90 40       	sbci	r25, 0x00	; 0
 142:	e1 f7       	brne	.-8      	; 0x13c <main+0x40>
 144:	00 c0       	rjmp	.+0      	; 0x146 <main+0x4a>
 146:	00 00       	nop

	  if (returnCounter() == 3){
		blink(100000);
	  }
	  
	counterPlus();
 148:	bc df       	rcall	.-136    	; 0xc2 <counterPlus>
	
	while (1) {
		sleep_mode();
 14a:	85 b7       	in	r24, 0x35	; 53
 14c:	80 62       	ori	r24, 0x20	; 32
 14e:	85 bf       	out	0x35, r24	; 53
 150:	88 95       	sleep
 152:	85 b7       	in	r24, 0x35	; 53
 154:	8f 7d       	andi	r24, 0xDF	; 223
 156:	85 bf       	out	0x35, r24	; 53
 158:	f8 cf       	rjmp	.-16     	; 0x14a <main+0x4e>

0000015a <eeprom_read_byte>:
 15a:	e1 99       	sbic	0x1c, 1	; 28
 15c:	fe cf       	rjmp	.-4      	; 0x15a <eeprom_read_byte>
 15e:	1f ba       	out	0x1f, r1	; 31
 160:	8e bb       	out	0x1e, r24	; 30
 162:	e0 9a       	sbi	0x1c, 0	; 28
 164:	99 27       	eor	r25, r25
 166:	8d b3       	in	r24, 0x1d	; 29
 168:	08 95       	ret

0000016a <eeprom_write_byte>:
 16a:	26 2f       	mov	r18, r22

0000016c <eeprom_write_r18>:
 16c:	e1 99       	sbic	0x1c, 1	; 28
 16e:	fe cf       	rjmp	.-4      	; 0x16c <eeprom_write_r18>
 170:	1c ba       	out	0x1c, r1	; 28
 172:	1f ba       	out	0x1f, r1	; 31
 174:	8e bb       	out	0x1e, r24	; 30
 176:	2d bb       	out	0x1d, r18	; 29
 178:	0f b6       	in	r0, 0x3f	; 63
 17a:	f8 94       	cli
 17c:	e2 9a       	sbi	0x1c, 2	; 28
 17e:	e1 9a       	sbi	0x1c, 1	; 28
 180:	0f be       	out	0x3f, r0	; 63
 182:	01 96       	adiw	r24, 0x01	; 1
 184:	08 95       	ret

00000186 <_exit>:
 186:	f8 94       	cli

00000188 <__stop_program>:
 188:	ff cf       	rjmp	.-2      	; 0x188 <__stop_program>
